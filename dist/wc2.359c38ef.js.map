{"version":3,"sources":["wc2/index.js"],"names":["template","document","createElement","innerHTML","Cities","shadowRoot","attachShadow","mode","appendChild","content","cloneNode","ul","querySelector","cityData","window","addEventListener","detail","renderCities","render","data","JSON","parse","console","log","getCitiesAsList","map","city","join","name","_","HTMLElement","customElements","define"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAMA,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB;AACAF,QAAQ,CAACG,SAAT;;IAaMC;;;;;AACJ,oBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,UAAL,GAAkB,MAAKC,YAAL,CAAkB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAlB,CAAlB;;AACA,UAAKF,UAAL,CAAgBG,WAAhB,CAA4BR,QAAQ,CAACS,OAAT,CAAiBC,SAAjB,CAA2B,IAA3B,CAA5B;;AACA,UAAKC,EAAL,GAAU,MAAKN,UAAL,CAAgBO,aAAhB,CAA8B,SAA9B,CAAV;AACA,UAAKC,QAAL,GAAgB,EAAhB;AALY;AAMb;;;;wCAEmB;AAAA;;AAClBC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,gBAAgB;AAAA,YAAbC,MAAa,QAAbA,MAAa;AAChD,QAAA,MAAI,CAACH,QAAL,GAAgB,MAAI,CAACI,YAAL,CAAkBD,MAAlB,CAAhB;;AACA,QAAA,MAAI,CAACE,MAAL;AACD,OAHD;AAID;;;oCAEeC,MAAM;AACpB,aAAQ,OAAOA,IAAP,KAAgB,QAAjB,GAA6BC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAA7B,GAAgDA,IAAvD;AACD;;;iCAEYA,MAAM;AACjBG,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,IAAjC;AACA,aAAO,KAAKK,eAAL,CAAqBL,IAArB,EAA2BM,GAA3B,CAAgC,UAAAC,IAAI;AAAA,0CAAuBA,IAAvB;AAAA,OAApC,EAAgFC,IAAhF,CAAqF,EAArF,CAAP;AACD;;;6CAEwBC,MAAMC,GAAGV,MAAM;AACtCG,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CK,IAA7C;AACA,WAAKf,QAAL,GAAgB,KAAKI,YAAL,CAAkBE,IAAlB,CAAhB;AACA,WAAKD,MAAL;AACD;;;6BAkBQ;AACP,WAAKP,EAAL,CAAQR,SAAR,GAAoB,KAAKU,QAAzB;AACD;;;sBAbUM,MAAM;AACfG,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,WAAKV,QAAL,GAAgB,KAAKI,YAAL,CAAkBE,IAAlB,CAAhB;AACA,WAAKD,MAAL;AACD;wBAEY;AACXI,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,aAAO,KAAKV,QAAZ;AACD;;;wBAd+B;AAC9BS,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,aAAO,CAAC,QAAD,CAAP;AACD;;;;mBAlCkBO;;AAmDrBhB,MAAM,CAACiB,cAAP,CAAsBC,MAAtB,CAA6B,YAA7B,EAA2C5B,MAA3C","file":"wc2.359c38ef.js","sourceRoot":"..","sourcesContent":["\nconst template = document.createElement('template');\ntemplate.innerHTML = `\n  <style>\n    .container {\n      padding: var(--main-padding, 18px);\n      background: var(--background-color, black);\n      color: var(--main-color, white);\n    }\n  </style>\n  <div class=\"container\">\n    <ul id=\"cities\"></ul>\n  </div>\n`;\n\nclass Cities extends HTMLElement {\n  constructor() {\n    super();\n    this.shadowRoot = this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n    this.ul = this.shadowRoot.querySelector('#cities');\n    this.cityData = []\n  }\n\n  connectedCallback() {\n    window.addEventListener('cities', ({ detail }) => {\n      this.cityData = this.renderCities(detail);\n      this.render();\n    });\n  }\n\n  getCitiesAsList(data) {\n    return (typeof data === 'string') ? JSON.parse(data) : data;\n  }\n\n  renderCities(data) {\n    console.log('---- renderCities', data);\n    return this.getCitiesAsList(data).map( city => `<tui-city city=\"${city}\"></tui-city>`).join('');\n  }\n\n  attributeChangedCallback(name, _, data) {\n    console.log('---- attributeChangedCallback', name);\n    this.cityData = this.renderCities(data);\n    this.render();\n  }\n  \n  static get observedAttributes() {\n    console.log('---- observedAttributes');\n    return ['cities'];\n  }\n\n  set cities(data) {\n    console.log('---- set cities');\n    this.cityData = this.renderCities(data);\n    this.render();\n  }\n\n  get cities() {\n    console.log('---- get cities');\n    return this.cityData;\n  }\n\n  render() {\n    this.ul.innerHTML = this.cityData;\n  }\n}\nwindow.customElements.define('tui-cities', Cities);"]}